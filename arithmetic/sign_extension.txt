 **********************
 PROCESS
 **********************
>> sign extension involves projecting the sign bit throughout the whole size of the bits
-> in order to sign extend, the representation have to be in binary format 
-> eg. 0xAA the sign extended format is 0xFFFFFAA - notice that its not extending the 'A' throughout the length, but rather the bit representation of 0xA (*1*010); the bit 1 surrounded by asterisk is the one extended 
-> hence 1111 -> 0xF throughout
** can only be used to convert signed value 


>> The reason why 0xAA and 0xFFFFFFAA both evaluates to the same signed 2's complement value (-86) is because in their binary format, the same formula of (2^(N-1)) + (2^(N-1) - 1) applies no matter the value of N


********************
NOTE
********************
1. One hex value can be represented as 4 binary bits value
>> 0xA -> 1010
>> 0xAA -> 1010 1010

 
 1) ---------------------
 signed char x = 255;


 binary: 1111 1111 (8 bits) 
 hex: 0xFF (8 bits)

********************************
 sign-extension to signed int
********************************

 binary: 1111 1111 1111 1111 1111 1111 *1*111 1111 (32 bits)
 >> sign bit 1 (indicated between asterisk) is copied into each bit position of the expanded object

 hex: 0xFFFFFFFF (32 bits)

 2) ---------------------
 ---------------------
 signed char x = 64;


 binary: 0100 0000 (8 bits) 
 hex: 0x40 (8 bits)

********************************
 sign-extension to signed int
********************************

 binary: 0000 0000 0000 0000 0000 0000 *0*100 0000 (32 bits)
 >> sign bit 0 (indicated between asterisk) is copied into each bit position of the expanded object

 hex: 0x00000040 (32 bits)


  3) ---------------------
 ---------------------
 signed char x = 239;


 binary: 1110 1111 (8 bits) 
 hex: 0xEF (8 bits)

********************************
 sign-extension to signed int
********************************

 binary: 1111 1111 1111 1111 1111 1111 *1*110 1111 (32 bits)
 >> sign bit 0 (indicated between asterisk) is copied into each bit position of the expanded object

 hex: 0xFFFFFFEF (32 bits)
 
 
 


